import React, { useState } from "react";
import Head from "next/head";
import Image from "next/image";
import Router from "next/router";
import { Row, Col, Button, Modal, Form, InputGroup, FormControl } from "react-bootstrap";
import Sidebar from "../components/sidebar";

export default function Home({ users }) {
  const [detailUser, setDetailUser] = useState({});
  const [show, setShow] = useState(false);
  const handleClose = () => setShow(false);
  const handleShow = () => setShow(true);

  let active = users.page;
  let items = [];
  for (let i = 1; i <= users.total_pages; i++) {
    items.push(
      <span
        className="text-decoration-none d-flex align-items-center justify-content-center mx-1 rounded-circle pagination"
        style={{ color: active === i ? "#FFF" : "#666666", backgroundColor: active === i ? "#7DB7B4" : "" }}
        onClick={(e) => {
          e.preventDefault();
          Router.push(`/?page=${i}`);
        }}
      >
        {i}
      </span>
    );
  }

  return (
    <div className="p-5 m-0">
      <Head>
        <title>Technical Test from Delegate</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="preload" href="/fonts/Gotham/GothamMedium.ttf" as="font" crossOrigin="" />
      </Head>

      <main className="text-gray">
        <Row>
          <Col xs={2} className="py-5 px-4 sidebar">
            <Sidebar />
          </Col>

          <Col xs={10}>
            <div className="d-flex flex-column h-100">
              <Row className="mb-3 container">
                <Col xs={1} className="d-flex align-items-center justify-content-end">
                  <Image src="/pencil.svg" height="50" width="50" />
                </Col>
                <Col xs={11} className="p-0">
                  <span className="p-0" style={{ fontSize: "11px" }}>
                    PERFORMANCE
                  </span>
                  <h3>Interested Users</h3>
                </Col>
              </Row>
              <div className="d-flex justify-content-end mb-3 mx-2">
                <Form
                  onSubmit={(e) => {
                    e.preventDefault();
                  }}
                >
                  <InputGroup size="sm" style={{ width: "305px" }}>
                    <InputGroup.Text className="border-0 shadow-none" style={{ backgroundColor: "rgba(102, 102, 102, 0.1)", borderRadius: "20px 0 0 20px" }}>
                      <Image src="/search.svg" height="13" width="13" />
                    </InputGroup.Text>
                    <FormControl className="border-0 shadow-none" placeholder="Search by email or name" style={{ backgroundColor: "rgba(102, 102, 102, 0.1)", borderRadius: "0 20px 20px 0", fontFamily: "Segoe UI" }} />
                  </InputGroup>
                </Form>
              </div>
              <div className="container">
                <h5 className="px-3 mb-3">INTERESTED USERS</h5>
                <Row className="px-3 mb-3 fw-bolder" style={{ color: "#7983A5", fontSize: "12px" }}>
                  <Col xs={2}>ID</Col>
                  <Col xs={5}>EMAIL</Col>
                  <Col xs={5}>NAME</Col>
                </Row>
                {users.data.map((user, idx) => {
                  return (
                    <Row
                      key={user.id}
                      className="p-3 mb-2"
                      style={{ boxSizing: "border-box", border: "1px solid rgba(102, 102, 102, 0.1)", boxShadow: "10px -6px 17px rgba(166, 180, 200, 0.15)", borderRadius: "12px", cursor: "pointer", fontSize: "11px" }}
                      onClick={(e) => {
                        e.preventDefault();
                        handleShow();
                        setDetailUser(user);
                      }}
                    >
                      <Col xs={2}>{user.id}</Col>
                      <Col xs={5}>{user.email}</Col>
                      <Col xs={5}>
                        {user.first_name} {user.last_name}
                      </Col>
                    </Row>
                  );
                })}
              </div>

              <footer className="d-flex align-items-center justify-content-center mt-auto">
                <Button
                  variant="link"
                  className="shadow-none mt-1"
                  onClick={() => {
                    Router.push(`/?page=${active - 1}`);
                  }}
                  disabled={active == 1}
                >
                  <Image src="/arrow_back.png" width="21px" height="16px" />
                </Button>
                {items}
                <Button
                  variant="link"
                  className="shadow-none mt-1"
                  onClick={() => {
                    Router.push(`/?page=${active + 1}`);
                  }}
                  disabled={active == users.total_pages}
                >
                  <Image src="/arrow_next.svg" width="21px" height="16px" />
                </Button>
              </footer>
            </div>
          </Col>

          <Modal show={show} onHide={handleClose} dialogClassName="text-gray" contentClassName="border-0" size="sm" centered>
            <Modal.Body className="text-center">
              <Image src={detailUser.avatar} width="150px" height="150px" alt="user_avatar" className="rounded-circle" />
              <div className="mt-3">
                {detailUser.email} <br />
                {detailUser.first_name} {detailUser.last_name}
              </div>
            </Modal.Body>
            <Modal.Footer className="border-0 d-flex justify-content-center">
              <Button onClick={handleClose} className="rounded-pill border-0 shadow-none" style={{ backgroundColor: "#7DB7B4" }}>
                Close
              </Button>
            </Modal.Footer>
          </Modal>
        </Row>
      </main>
    </div>
  );
}

export async function getServerSideProps({ query: { page = 1 } }) {
  const res = await fetch(`https://reqres.in/api/users?page=${page}}`);
  const users = await res.json();

  return { props: { users } };
}
